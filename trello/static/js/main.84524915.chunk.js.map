{"version":3,"sources":["components/Header/Header.js","actions/initData.js","components/Contact/Contact.js","components/BoardBar/BoardBar.js","components/Card/Card.js","utilities/sort.js","utilities/const.js","utilities/contentEditable.js","components/Common/ConfirmModal.js","components/Column/Column.js","utilities/dragDrop.js","components/BoardContent/BoardContent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","initData","boards","id","columnOrder","columns","boardId","title","cardOrder","cards","columnId","cover","contact","img","src","Contact","props","href","alt","BoardBar","contactList","map","Task","card","onMouseDown","e","preventDefault","mapOrder","array","order","key","sort","a","b","indexOf","MODAL_ACTION_CLOSE","MODAL_ACTION_CONFIRM","selectAlltext","target","focus","select","saveContentEnterPress","keyCode","blur","ConfirmModal","show","content","onAction","Modal","onHide","backdrop","keyboard","closeButton","Title","Body","Footer","Button","variant","onClick","Column","column","onCardDrop","onUpdateColumn","useState","displayConfirmModal","setDisplayConfirmModal","columnTitle","setColumnTitle","showAddCardForm","setShowAddCardForm","newCardInputRef","useRef","newCardTitle","setNewCardTitle","useEffect","current","toggleConfirmModal","onToggleAddCardForm","onAddCard","newCardToAdd","Math","random","toString","substr","trim","newColumn","cloneDeep","push","Form","Control","size","type","value","spellCheck","onChange","onBlur","onKeyDown","Dropdown","Toggle","Menu","Item","groupName","onDrop","dropResult","getChildPayload","index","dragClass","dropClass","dropPlaceholder","animationDuration","showOnTop","dropPlaceholderAnimationDuration","as","rows","placeholder","ref","onKeyUp","_destroy","applyDrag","arr","dragResult","removedIndex","addedIndex","payload","result","itemToAdd","splice","BoardContent","board","setBoard","setColumns","openColForm","setOpenColForm","newColumnInputRef","newColumnTitle","setNewColumnTitle","boardfromDB","find","isEmpty","newColumns","currentColumn","toggleNewColForm","onAddColumn","newColumnToAdd","newBoard","newColumnUpdate","idColumnUpdate","indexColumnUpdate","findIndex","item","orientation","dragHandleSelector","Row","Col","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84524915.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.scss'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <nav className='navbar header'>Todo list with React & trello theme</nav>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","\r\nexport const initData = {\r\n    boards: [\r\n        {\r\n            id: 'board-1',\r\n            columnOrder: ['column-1', 'column-2', 'column-3'],\r\n            columns: [\r\n                {\r\n                    id: 'column-1',\r\n                    boardId: 'board-1',\r\n                    title: 'First work',\r\n                    cardOrder: ['card-1', 'card-2', 'card-3', 'card-4', 'card-5', 'card-6'],\r\n                    cards: [\r\n                        {\r\n                            id: 'card-1',\r\n                            boardId: 'board-1',\r\n                            columnId: 'column-1',\r\n                            title: 'View myCV',\r\n                            cover: 'https://i.pinimg.com/564x/6a/0d/ba/6a0dba51a33a15b43c3c13978882f94e.jpg'\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    id: 'column-2',\r\n                    boardId: 'board-1',\r\n                    title: 'Your Evalution',\r\n                    cardOrder: ['card-7', 'card-8', 'card-9', 'card-10'],\r\n                    cards: [\r\n                        {\r\n                            id: 'card-7',\r\n                            boardId: 'board-1',\r\n                            columnId: 'column-2',\r\n                            title: 'View my project',\r\n                            cover: 'https://i.pinimg.com/564x/1d/36/a9/1d36a93d6ca08a121ff0084a1c83df18.jpg'\r\n                        }\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    id: 'column-3',\r\n                    boardId: 'board-1',\r\n                    title: 'Done column',\r\n                    cardOrder: ['card-11', 'card-12', 'card-13'],\r\n                    cards: [\r\n                        {\r\n                            id: 'card-11',\r\n                            boardId: 'board-1',\r\n                            columnId: 'column-3',\r\n                            title: 'I really happy',\r\n                            cover: 'https://i.pinimg.com/564x/9e/ec/5f/9eec5ff055df56c7e63a7d1357b36790.jpg'\r\n                        },\r\n                        {\r\n                            id: 'card-12',\r\n                            boardId: 'board-1',\r\n                            columnId: 'column-3',\r\n                            title: 'If we have an interview',\r\n                            cover: null\r\n                        },\r\n                        {\r\n                            id: 'card-13',\r\n                            boardId: 'board-1',\r\n                            columnId: 'column-3',\r\n                            title: 'Thank u <3 ',\r\n                            cover: null\r\n                        }\r\n                    ]\r\n                }\r\n\r\n            ]\r\n        }\r\n    ],\r\n    contact: [\r\n        {\r\n            id: 'ct-1',\r\n            title: 'facebook',\r\n            img: 'https://scontent.fhan5-5.fna.fbcdn.net/v/t1.6435-9/cp0/238872695_637254067677678_1603704467664782346_n.jpg?_nc_cat=101&ccb=1-5&_nc_sid=730e14&_nc_ohc=D_4qYvUaFKYAX9qYnCN&_nc_ht=scontent.fhan5-5.fna&oh=158dbc4f94f4f975573717aa3ee50f32&oe=613FEEFB',\r\n            src: 'https://www.facebook.com/yeuHienMai2003'\r\n        },\r\n        {\r\n            id: 'ct-2',\r\n            title: 'Github',\r\n            img: 'https://scontent.fhan5-5.fna.fbcdn.net/v/t1.6435-9/cp0/234803161_637251244344627_9083235869532119155_n.jpg?_nc_cat=101&ccb=1-5&_nc_sid=730e14&_nc_ohc=0hTaz0eNqy0AX8P-jHY&tn=m4QRv7cwObWWmuEG&_nc_ht=scontent.fhan5-5.fna&oh=bf1256240b908d3015ce291716e651f6&oe=613DF89C',\r\n            src: 'https://github.com/thuhuong1995'\r\n        },\r\n        {\r\n            id: 'ct-3',\r\n            title: 'phone',\r\n            img: 'https://scontent.fhan5-7.fna.fbcdn.net/v/t1.6435-9/cp0/238909852_637251257677959_2477337409476432278_n.jpg?_nc_cat=103&ccb=1-5&_nc_sid=730e14&_nc_ohc=aoYvAIJ31Y8AX903oS8&_nc_ht=scontent.fhan5-7.fna&oh=6454a81e23b02222a24531303b7833ad&oe=613E1407',\r\n            src: ''\r\n        }\r\n    ]\r\n}","import React from 'react'\r\nimport './contact.scss'\r\n\r\nconst Contact = (props) => {\r\n\r\n    const { contact } = props\r\n    return (\r\n        <li className='contact'>\r\n            <a className='contact__link' href={contact.src}>\r\n                <span className='span1'></span>\r\n                <span className='span2'></span>\r\n                <span className='span3'></span>\r\n                <span className='span4'></span>\r\n                <img className='contact__img' src={contact.img} alt={contact.title} />\r\n            </a>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport './BoardBar.scss'\r\nimport { initData } from 'actions/initData'\r\nimport Contact from 'components/Contact/Contact'\r\n\r\nconst BoardBar = () => {\r\n    const contactList = initData.contact\r\n\r\n    return (\r\n        <nav className='navbar bar'>\r\n            {\r\n                contactList.map(contact => <Contact key={contact.id} contact={contact} />)\r\n            }\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default BoardBar","import React from 'react'\r\nimport './Card.scss'\r\n\r\nconst Task = (props) => {\r\n    const { card } = props\r\n\r\n    return (\r\n        <div className='card-item'>\r\n            {card.cover && <img\r\n                src={card.cover}\r\n                className='card-img'\r\n                alt=' this is img'\r\n                onMouseDown={e => e.preventDefault()}\r\n            />}\r\n            {card.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","export const mapOrder = (array, order, key) => {\r\n    array.sort((a, b) => order.indexOf(a[key]) - order.indexOf(b[key]))\r\n    return array\r\n}\r\n","export const API_ROOT = 'https://611876439bcfb40017168805.mockapi.io/api/v1'\r\n\r\nexport const MODAL_ACTION_CLOSE = 'MODAL_ACTION_CLOSE'\r\nexport const MODAL_ACTION_CONFIRM = 'MODAL_ACTION_CONFIRM'\r\n\r\n","\r\nexport const selectAlltext = (e) => {\r\n    e.target.focus()\r\n    e.target.select()\r\n}\r\nexport const saveContentEnterPress = (e) => {\r\n    if (e.keyCode === 13) {\r\n        e.target.blur()\r\n    }\r\n}","import { Button, Modal } from 'react-bootstrap'\r\nimport React from 'react'\r\nimport { MODAL_ACTION_CLOSE, MODAL_ACTION_CONFIRM } from 'utilities/const'\r\n\r\n\r\nfunction ConfirmModal(props) {\r\n    const { title, show, content, onAction } = props\r\n    return (\r\n\r\n        <Modal show={show} onHide={() => onAction(MODAL_ACTION_CLOSE)} backdrop='static' keyboard={false}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{content}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => onAction(MODAL_ACTION_CLOSE)}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => onAction(MODAL_ACTION_CONFIRM)}>\r\n                    Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default ConfirmModal","import Card from 'components/Card/Card'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport './Column.scss'\r\nimport { Dropdown, Form, Button } from 'react-bootstrap'\r\nimport { cloneDeep } from 'lodash'\r\n\r\nimport { Container, Draggable } from 'react-smooth-dnd'\r\n\r\nimport { mapOrder } from 'utilities/sort'\r\nimport { MODAL_ACTION_CONFIRM } from 'utilities/const'\r\nimport { selectAlltext, saveContentEnterPress } from 'utilities/contentEditable'\r\n\r\n// Component\r\nimport ConfirmModal from 'components/Common/ConfirmModal'\r\n\r\nconst Column = (props) => {\r\n    const { column, onCardDrop, onUpdateColumn } = props\r\n\r\n    const cards = mapOrder(column.cards, column.cardOrder, 'id')\r\n\r\n    // state\r\n    const [displayConfirmModal, setDisplayConfirmModal] = useState(false)\r\n    const [columnTitle, setColumnTitle] = useState('')\r\n    const [showAddCardForm, setShowAddCardForm] = useState(false)\r\n    const newCardInputRef = useRef(null)\r\n    const [newCardTitle, setNewCardTitle] = useState('')\r\n\r\n    const onNewCardTitleChange = (e) => setNewCardTitle(e.target.value)\r\n\r\n    useEffect(() => {\r\n        setColumnTitle(column.title)\r\n    }, [column.title])\r\n    const handleTitleChange = (e) => setColumnTitle(e.target.value)\r\n\r\n    useEffect(() => {\r\n        if (newCardInputRef && newCardInputRef.current) {\r\n            newCardInputRef.current.focus()\r\n            newCardInputRef.current.select()\r\n        }\r\n\r\n    }, [showAddCardForm])\r\n\r\n    // action\r\n\r\n    const toggleConfirmModal = () => setDisplayConfirmModal(!displayConfirmModal)\r\n\r\n    const onConfirmModal = (type) => {\r\n\r\n        if (type === MODAL_ACTION_CONFIRM) {\r\n            const newColumn = {\r\n                ...column,\r\n                _destroy: true\r\n            }\r\n            onUpdateColumn(newColumn)\r\n        }\r\n        toggleConfirmModal()\r\n    }\r\n\r\n    const handleTitleBlur = () => {\r\n        const newColumn = {\r\n            ...column,\r\n            title: columnTitle\r\n        }\r\n        onUpdateColumn(newColumn)\r\n    }\r\n    const onToggleAddCardForm = () => {\r\n        setShowAddCardForm(!showAddCardForm)\r\n    }\r\n    const onAddCard = () => {\r\n        if (!newCardTitle) {\r\n            newCardInputRef.current.focus()\r\n            return\r\n        }\r\n        const newCardToAdd = {\r\n            id: Math.random().toString(36).substr(2, 5),\r\n            boardId: column.boardId,\r\n            title: newCardTitle.trim(),\r\n            columnId: column.id,\r\n            cover: ''\r\n        }\r\n\r\n        let newColumn = cloneDeep(column)\r\n        newColumn.cards.push(newCardToAdd)\r\n        newColumn.cardOrder.push(newCardToAdd.id)\r\n\r\n        onUpdateColumn(newColumn)\r\n        setNewCardTitle('')\r\n        setShowAddCardForm(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='column'>\r\n            <header className='column-drag column-drag-handle'>\r\n                {/* title */}\r\n                <div className='column-title'>\r\n                    <Form.Control\r\n                        size=\"sm\"\r\n                        type=\"text\"\r\n                        className='column-input text-inputable'\r\n                        value={columnTitle}\r\n                        spellCheck='false'\r\n                        onClick={selectAlltext}\r\n                        onChange={handleTitleChange}\r\n                        onBlur={handleTitleBlur}\r\n                        onKeyDown={saveContentEnterPress}\r\n                        onMouseDown={e => e.preventDefault()}\r\n                    />\r\n                </div>\r\n                {/* dropdown action */}\r\n                <div className='column-dropdown'>\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='column-toggle'>\r\n                            <i className='fa fa-ellipsis-v' />\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item >Add card</Dropdown.Item>\r\n                            <Dropdown.Item onClick={toggleConfirmModal}>Delete card</Dropdown.Item>\r\n                            <Dropdown.Item >...</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            </header>\r\n            {/* list item */}\r\n            <div className='card-list'>\r\n                {/* item in drag tag */}\r\n                <Container\r\n                    groupName=\"task-item\"\r\n                    onDrop={dropResult => onCardDrop(column.id, dropResult)}\r\n                    getChildPayload={index => cards[index]}\r\n                    dragClass='card-ghost'\r\n                    dropClass='card-ghost-drop'\r\n\r\n                    dropPlaceholder={{\r\n                        animationDuration: 150,\r\n                        showOnTop: true,\r\n                        className: 'card-drop-preview'\r\n                    }}\r\n                    dropPlaceholderAnimationDuration={200}\r\n                >\r\n                    {\r\n                        cards.map((card, index) => <Draggable key={index}><Card card={card} column={column} /></Draggable>)\r\n                    }\r\n                </Container>\r\n                {/* form add card */}\r\n                {showAddCardForm && <div className='add-new-card'>\r\n                    <Form.Control\r\n                        size=\"sm\"\r\n                        as=\"textarea\"\r\n                        rows='3'\r\n                        placeholder=\"Enter a title for this card\"\r\n                        className='card-input'\r\n                        ref={newCardInputRef}\r\n                        value={newCardTitle}\r\n                        onChange={onNewCardTitleChange}\r\n                        onKeyDown={e => (e.keyCode === 13) && onAddCard()}\r\n                        onKeyUp={e => (e.keyCode === 27) && onToggleAddCardForm()}\r\n                    />\r\n\r\n                    <Button\r\n                        className='board-btn card-btn--success'\r\n                        variant=\"success\"\r\n                        size=\"sm\"\r\n                        onClick={onAddCard}\r\n                    >\r\n                        Add card\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        size='sm'\r\n                        className='board-btn card-btn--cancel ml-10'\r\n                        onClick={onToggleAddCardForm}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </div>}\r\n            </div>\r\n            {/* button show add card form */}\r\n            {!showAddCardForm && <footer>\r\n                <div className='footer-actions' onClick={onToggleAddCardForm}>\r\n                    <i className='fa fa-plus icon' />\r\n                    Add new card\r\n                </div>\r\n            </footer>}\r\n            <ConfirmModal\r\n                show={displayConfirmModal}\r\n                onAction={onConfirmModal}\r\n                title='Remove column'\r\n                content={`Do you want to remove column: \r\n                ${column.title}? \r\n                All item in column will be remove...`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Column","export const applyDrag = (arr, dragResult) => {\r\n    const { removedIndex, addedIndex, payload } = dragResult\r\n    if (removedIndex === null && addedIndex === null) return arr\r\n\r\n    const result = [...arr]\r\n    let itemToAdd = payload\r\n\r\n    if (removedIndex !== null) {\r\n        itemToAdd = result.splice(removedIndex, 1)[0]\r\n    }\r\n\r\n    if (addedIndex !== null) {\r\n        result.splice(addedIndex, 0, itemToAdd)\r\n    }\r\n\r\n    return result\r\n}","import Column from 'components/Column/Column'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport './BoardContent.scss'\r\nimport { isEmpty } from 'lodash'\r\nimport { Container, Draggable } from 'react-smooth-dnd'\r\nimport { Container as BContainer, Row, Col, Form, Button } from 'react-bootstrap'\r\n\r\nimport { mapOrder } from 'utilities/sort'\r\nimport { initData } from 'actions/initData'\r\nimport { applyDrag } from 'utilities/dragDrop'\r\n\r\nconst BoardContent = () => {\r\n    const [board, setBoard] = useState({})\r\n    const [columns, setColumns] = useState([])\r\n    const [openColForm, setOpenColForm] = useState(false)\r\n    const newColumnInputRef = useRef(null)\r\n    const [newColumnTitle, setNewColumnTitle] = useState('')\r\n\r\n    const onInputChange = (e) => setNewColumnTitle(e.target.value)\r\n\r\n    useEffect(() => {\r\n\r\n        const boardfromDB = initData.boards.find(board => board.id === 'board-1')\r\n\r\n        if (boardfromDB) {\r\n            setBoard(boardfromDB)\r\n            setColumns(mapOrder(boardfromDB.columns, boardfromDB.columnOrder, 'id'))\r\n\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (newColumnInputRef && newColumnInputRef.current) {\r\n            newColumnInputRef.current.focus()\r\n            newColumnInputRef.current.select()\r\n        }\r\n    }, [openColForm])\r\n\r\n\r\n    if (isEmpty(board)) {\r\n        return <div className='not-found'>Board is not found</div>\r\n    }\r\n    const onColumnDrop = (dropResult) => {\r\n        let newColumns = [...columns]\r\n        newColumns = applyDrag(newColumns, dropResult)\r\n\r\n        let newBoard = { ...board }\r\n        newBoard.columnOrder = newColumns.map(column => column.id)\r\n        newBoard.columns = newColumns\r\n\r\n        setColumns(newColumns)\r\n        setBoard(newBoard)\r\n    }\r\n    const onCardDrop = (columnId, dropResult) => {\r\n        if (dropResult.removedIndex !== null || dropResult.addedIndex !== null) {\r\n\r\n            let newColumns = [...columns]\r\n\r\n            let currentColumn = newColumns.find(column => column.id === columnId)\r\n\r\n            currentColumn.cards = applyDrag(currentColumn.cards, dropResult)\r\n\r\n            currentColumn.cardOrder = currentColumn.cards.map(card => card.id)\r\n\r\n            setColumns(newColumns)\r\n        }\r\n\r\n    }\r\n    const toggleNewColForm = () => {\r\n        setOpenColForm(!openColForm)\r\n    }\r\n\r\n    const onAddColumn = () => {\r\n        if (!newColumnTitle) {\r\n            newColumnInputRef.current.focus()\r\n            return\r\n        }\r\n\r\n        const newColumnToAdd = {\r\n            id: Math.random().toString(36).substr(2, 5),\r\n            boardId: board.id,\r\n            title: newColumnTitle.trim(),\r\n            cardOrder: [],\r\n            cards: []\r\n        }\r\n        let newColumns = [...columns]\r\n\r\n        newColumns.push(newColumnToAdd)\r\n\r\n        let newBoard = { ...board }\r\n        newBoard.columnOrder = newColumns.map(column => column.id)\r\n        newBoard.columns = newColumns\r\n\r\n        setColumns(newColumns)\r\n        setBoard(newBoard)\r\n        setOpenColForm(false)\r\n        setNewColumnTitle('')\r\n\r\n    }\r\n\r\n    const onUpdateColumn = (newColumnUpdate) => {\r\n        const idColumnUpdate = newColumnUpdate.id\r\n\r\n        let newColumns = [...columns]\r\n\r\n        const indexColumnUpdate = newColumns.findIndex(item => item.id === idColumnUpdate)\r\n\r\n        if (newColumnUpdate._destroy) {\r\n            newColumns.splice(indexColumnUpdate, 1)\r\n        } else {\r\n            newColumns.splice(indexColumnUpdate, 1, newColumnUpdate)\r\n        }\r\n        let newBoard = { ...board }\r\n        newBoard.columnOrder = newColumns.map(column => column.id)\r\n        newBoard.columns = newColumns\r\n\r\n        setColumns(newColumns)\r\n        setBoard(newBoard)\r\n    }\r\n\r\n    return (\r\n        <div className='board-content'>\r\n            <Container\r\n                orientation=\"horizontal\"\r\n                onDrop={onColumnDrop}\r\n                getChildPayload={index => columns[index]}\r\n                dragHandleSelector=\".column-drag-handle\"\r\n                dropPlaceholder={{\r\n                    animationDuration: 150,\r\n                    showOnTop: true,\r\n                    className: 'column-drop-preview'\r\n                }}\r\n            >\r\n                {columns.map((column, index) => (\r\n                    <Draggable key={index}>\r\n                        <Column\r\n                            column={column}\r\n                            onCardDrop={onCardDrop}\r\n                            onUpdateColumn={onUpdateColumn}\r\n                        />\r\n                    </Draggable>\r\n                ))}\r\n            </Container>\r\n            <BContainer className='b-container'>\r\n                {/* button show form */}\r\n                {\r\n                    !openColForm && <Row className='w-250'>\r\n                        <Col className='board-actions ml-10' onClick={toggleNewColForm}>\r\n                            <i className='fa fa-plus icon' />\r\n                            Add card\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                {/* form input new column */}\r\n                {\r\n                    openColForm ? <Row>\r\n                        <Col className='board-form ml-10'>\r\n                            <Form.Control\r\n                                size=\"sm\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter column title\"\r\n                                className='board-input'\r\n                                ref={newColumnInputRef}\r\n                                value={newColumnTitle}\r\n                                onChange={onInputChange}\r\n                                onKeyDown={e => (e.keyCode === 13) && onAddColumn()}\r\n                                onKeyUp={e => (e.keyCode === 27) && toggleNewColForm()}\r\n                            />\r\n\r\n                            <Button\r\n                                className='board-btn board-btn--success'\r\n                                variant=\"success\"\r\n                                size=\"sm\"\r\n                                onClick={onAddColumn}\r\n                            >\r\n                                Add column\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                size='sm'\r\n                                className='board-btn board-btn--cancel ml-10'\r\n                                onClick={toggleNewColForm}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </Col>\r\n                    </Row> : ''\r\n                }\r\n\r\n            </BContainer>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BoardContent","import React from 'react'\r\nimport 'App.scss'\r\n\r\n//  custom component\r\nimport Header from 'components/Header/Header'\r\nimport BoardBar from 'components/BoardBar/BoardBar'\r\nimport BoardContent from 'components/BoardContent/BoardContent'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"trello\">\r\n      {/*  header */}\r\n      <Header />\r\n      {/* bar */}\r\n      <BoardBar />\r\n      {/* content */}\r\n      <BoardContent />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}